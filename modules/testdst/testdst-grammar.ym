/*
* Copyright (c) 2018 videet
*
* This program is free software; you can redistribute it and/or modify it
* under the terms of the GNU General Public License version 2 as published
* by the Free Software Foundation, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*
* As an additional exemption you are allowed to compile & link against the
* OpenSSL libraries as published by the OpenSSL project. See the file
* COPYING for details.
*
*/

%code top {
#include "testdst-parser.h"

}


%code {

#include "cfg-parser.h"
#include "testdst-grammar.h"
#include "syslog-names.h"
#include "messages.h"
#include "plugin.h"
#include "testdst.h"
#include "cfg-grammar.h"
#include <string.h>

extern LogDriver *last_driver;

}

%name-prefix "testdst_"

/* this parameter is needed in order to instruct bison to use a complete
* argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogDriver **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%type   <ptr> testdst_dd

%token KW_TESTDST
%token KW_SERVER
%token KW_PORT
%token KW_INDEX
%token KW_TYPE
%token KW_CUSTOM_ID



%%

start
: LL_CONTEXT_DESTINATION testdst_dd       { *instance = $2; YYACCEPT; }
;


testdst_dd
: KW_TESTDST 
{ 
last_driver = testdst_dd_new(configuration);
}
'(' testdst_opts ')'             { $$ = last_driver; }
;



testdst_opts
: testdst_opt testdst_opts
|
;

testdst_opt

: KW_SERVER       '(' string ')'            { testdst_dd_set_server(last_driver, $3);  }
| KW_PORT       '(' string ')'            { testdst_dd_set_port(last_driver, $3); }
| KW_INDEX       '(' string ')'            { testdst_dd_set_index(last_driver, $3); }
| KW_TYPE      '(' string ')'            { testdst_dd_set_type(last_driver, $3); }
| KW_CUSTOM_ID       '(' string ')'            { testdst_dd_set_custom_id(last_driver, $3); }
| KW_TEMPLATE '(' template_content ')'      { testdst_dd_set_template(last_driver, $3); }
| { last_template_options = testdst_dd_get_template_options(last_driver); } template_option
;
/* INCLUDE_RULES */

%%
